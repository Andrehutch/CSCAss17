#lang racket
(require "utility.rkt")
(require "runner.rkt")
(require "parcer.rkt")
(require "variable_env.rkt")

(define env ((global (a 1) (b 2) (c 5))))
(block (print a) (assign x 8) (assign y (math * x 2)) (print y) (assign z (math + b y)) (print z))

(define sample-code '(block (assign x 8) (assign x (math * x 2)) (print x))) ; no output
(displayln (neo-parser sample-code))
(define parsed-neo-code (neo-parser sample-code))
(run-neo-parsed-code parsed-neo-code env)
